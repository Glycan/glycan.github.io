#!/usr/bin/env python3
"""
Script which calls https://rentmen.com/settings/setAvailability({unset,available,unavailable}, time_period)

Requires python and python-requests

Example usage:
./rentmen_setAvailability USERNAME PASSWORD 1 6
"""

import requests
import sys


S = requests.Session()
S.headers['User-Agent'] = "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_3) AppleWebKit/600.5.17 (KHTML, like Gecko) Version/8.0.5 Safari/600.5.17"


def login(username, password):
        r = S.post("https://rentmen.com/login/submit", data={"username": username, "password": password})
        if not r.json()['success'] == 1:
                raise Exception(r.json()['message'])
        global R1
        R1 = r

def setAvailability(kind, hours):
        """
        kind is an enum:
        0 - availability is set to "Not Set" (and in this case hours is ignored)
        1 - availability is set to "Available"
        2 - availability is set to "Unavailable"

        hours is the number of hours that the status applies for; after that, it reverts to Not Set
        (*except* it's actually also an enum: hidden from the UI there's secret option 7 which means 3 days and option 8 which means 1 week; but for the legit options they want to use, the enum value == the hours value)
        """
        kind = int(kind)
        hours = int(hours)  
        r = S.post("https://rentmen.com/settings/ajax", data={"action": "setAvailability", "availabilityOption": kind, "availabilityTime": hours})
        if not r.json()['success'] == 1:
                raise Exception(r.json()['message'])
        print r.json()['message']
        global R2 #DEBUG
        R2 = r


if __name__ == '__main__':
        login(sys.argv[1], sys.argv[2])
        setAvailability(sys.argv[3], sys.argv[4])
